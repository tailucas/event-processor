#!/usr/bin/python
import logging
import logging.handlers
import os
import pytz
import sys
import time
import umsgpack

from ConfigParser import ConfigParser

from datetime import datetime
from threading import Thread
from time import sleep
from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer

APP=os.path.basename(__file__)
log = logging.getLogger(APP)

config = ConfigParser()
config.read([os.path.expanduser('~/.{}'.format(APP))])

class UploadEventHandler(FileSystemEventHandler):
    def on_modified(self, event):
        super(UploadEventHandler, self).on_modified(event)
        what = 'directory' if event.is_directory else 'file'
        log.info("Modified {}: {}".format(what, event.src_path))

if __name__ == "__main__":
    # set up logging
    log.setLevel(logging.DEBUG)
    syslog_handler = logging.handlers.SysLogHandler(address = '/dev/log')
    formatter = logging.Formatter('%(name)s [%(levelname)s] %(message)s')
    syslog_handler.setFormatter(formatter)
    log.addHandler(syslog_handler)
    stream_handler = logging.StreamHandler(stream=sys.stdout)
    log.addHandler(stream_handler)
    # start threads
    observer = Observer()
    observer.schedule(UploadEventHandler(), '/storage/ftp/', recursive=True)
    observer.start()
    try:
        while True:
            time.sleep(1)
    except(KeyboardInterrupt, SystemExit):
        observer.stop()
        observer.join()
